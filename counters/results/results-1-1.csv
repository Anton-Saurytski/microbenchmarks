"Benchmark","Mode","Threads","Samples","Score","Score Error (99.9%)","Unit"
"com.github.chrishantha.microbenchmark.counter.CounterBenchmark.Adder","thrpt",2,10,137812349.882938,83350679.098914,"ops/s"
"com.github.chrishantha.microbenchmark.counter.CounterBenchmark.Adder:getAdder","thrpt",2,10,90164697.919534,45751205.427422,"ops/s"
"com.github.chrishantha.microbenchmark.counter.CounterBenchmark.Adder:incAdder","thrpt",2,10,47647651.963404,38017383.137805,"ops/s"
"com.github.chrishantha.microbenchmark.counter.CounterBenchmark.Atomic","thrpt",2,10,144987619.426043,103830527.388261,"ops/s"
"com.github.chrishantha.microbenchmark.counter.CounterBenchmark.Atomic:getAtomic","thrpt",2,10,75353427.347857,26554472.148994,"ops/s"
"com.github.chrishantha.microbenchmark.counter.CounterBenchmark.Atomic:incAtomic","thrpt",2,10,69634192.078187,77570386.474345,"ops/s"
"com.github.chrishantha.microbenchmark.counter.CounterBenchmark.LockFair","thrpt",2,10,385348.345392,19882.166122,"ops/s"
"com.github.chrishantha.microbenchmark.counter.CounterBenchmark.LockFair:getFairLock","thrpt",2,10,191632.875325,9211.755611,"ops/s"
"com.github.chrishantha.microbenchmark.counter.CounterBenchmark.LockFair:incFairLock","thrpt",2,10,193715.470068,11224.659084,"ops/s"
"com.github.chrishantha.microbenchmark.counter.CounterBenchmark.LockNonFair","thrpt",2,10,11677225.684075,12575824.549674,"ops/s"
"com.github.chrishantha.microbenchmark.counter.CounterBenchmark.LockNonFair:getNonFairLock","thrpt",2,10,4964240.723725,4837648.756444,"ops/s"
"com.github.chrishantha.microbenchmark.counter.CounterBenchmark.LockNonFair:incNonFairLock","thrpt",2,10,6712984.960350,7774382.774867,"ops/s"
"com.github.chrishantha.microbenchmark.counter.CounterBenchmark.RWLockFair","thrpt",2,10,470329.273787,144616.808291,"ops/s"
"com.github.chrishantha.microbenchmark.counter.CounterBenchmark.RWLockFair:getFairRWLock","thrpt",2,10,237516.223298,122258.741360,"ops/s"
"com.github.chrishantha.microbenchmark.counter.CounterBenchmark.RWLockFair:incFairRWLock","thrpt",2,10,232813.050489,101968.112392,"ops/s"
"com.github.chrishantha.microbenchmark.counter.CounterBenchmark.RWLockNonFair","thrpt",2,10,12434124.705235,9410248.143562,"ops/s"
"com.github.chrishantha.microbenchmark.counter.CounterBenchmark.RWLockNonFair:getNonFairRWLock","thrpt",2,10,4258190.492940,2956225.113747,"ops/s"
"com.github.chrishantha.microbenchmark.counter.CounterBenchmark.RWLockNonFair:incNonFairRWLock","thrpt",2,10,8175934.212295,6456848.696865,"ops/s"
"com.github.chrishantha.microbenchmark.counter.CounterBenchmark.SemaphoreFair","thrpt",2,10,379789.946126,7432.011627,"ops/s"
"com.github.chrishantha.microbenchmark.counter.CounterBenchmark.SemaphoreFair:getFairSemaphore","thrpt",2,10,189317.466731,4205.260521,"ops/s"
"com.github.chrishantha.microbenchmark.counter.CounterBenchmark.SemaphoreFair:incFairSemaphore","thrpt",2,10,190472.479394,4091.417162,"ops/s"
"com.github.chrishantha.microbenchmark.counter.CounterBenchmark.SemaphoreNonFair","thrpt",2,10,9670339.672072,9667132.506501,"ops/s"
"com.github.chrishantha.microbenchmark.counter.CounterBenchmark.SemaphoreNonFair:getNonFairSemaphore","thrpt",2,10,4759761.618461,4274917.484034,"ops/s"
"com.github.chrishantha.microbenchmark.counter.CounterBenchmark.SemaphoreNonFair:incNonFairSemaphore","thrpt",2,10,4910578.053610,5399294.699709,"ops/s"
"com.github.chrishantha.microbenchmark.counter.CounterBenchmark.Stamped","thrpt",2,10,15326829.363231,14823839.539608,"ops/s"
"com.github.chrishantha.microbenchmark.counter.CounterBenchmark.Stamped:getStamped","thrpt",2,10,5692972.002098,8867252.248786,"ops/s"
"com.github.chrishantha.microbenchmark.counter.CounterBenchmark.Stamped:incStamped","thrpt",2,10,9633857.361133,6129620.466726,"ops/s"
"com.github.chrishantha.microbenchmark.counter.CounterBenchmark.StampedOptimistic","thrpt",2,10,19512950.117857,20544047.330714,"ops/s"
"com.github.chrishantha.microbenchmark.counter.CounterBenchmark.StampedOptimistic:getOptimisticStamped","thrpt",2,10,7578865.943613,8960698.701449,"ops/s"
"com.github.chrishantha.microbenchmark.counter.CounterBenchmark.StampedOptimistic:incOptimisticStamped","thrpt",2,10,11934084.174244,11938595.477211,"ops/s"
"com.github.chrishantha.microbenchmark.counter.CounterBenchmark.Synchronized","thrpt",2,10,20011200.797836,14192963.774003,"ops/s"
"com.github.chrishantha.microbenchmark.counter.CounterBenchmark.Synchronized:getSynchronized","thrpt",2,10,8220730.168864,4360550.035168,"ops/s"
"com.github.chrishantha.microbenchmark.counter.CounterBenchmark.Synchronized:incSynchronized","thrpt",2,10,11790470.628972,9905360.199754,"ops/s"
"com.github.chrishantha.microbenchmark.counter.CounterBenchmark.SynchronizedMethod","thrpt",2,10,24924976.944466,16747337.358676,"ops/s"
"com.github.chrishantha.microbenchmark.counter.CounterBenchmark.SynchronizedMethod:getSynchronizedMethod","thrpt",2,10,9848819.130196,4589864.875728,"ops/s"
"com.github.chrishantha.microbenchmark.counter.CounterBenchmark.SynchronizedMethod:incSynchronizedMethod","thrpt",2,10,15076157.814270,12199577.881664,"ops/s"
"com.github.chrishantha.microbenchmark.counter.CounterBenchmark.Volatile","thrpt",2,10,182902827.891530,140325873.910956,"ops/s"
"com.github.chrishantha.microbenchmark.counter.CounterBenchmark.Volatile:getVolatile","thrpt",2,10,99806227.883407,83501966.708941,"ops/s"
"com.github.chrishantha.microbenchmark.counter.CounterBenchmark.Volatile:incVolatile","thrpt",2,10,83096600.008123,57220295.065361,"ops/s"
