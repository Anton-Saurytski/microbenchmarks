"Benchmark","Mode","Threads","Samples","Score","Score Error (99.9%)","Unit"
"com.github.chrishantha.microbenchmark.counter.CounterBenchmark.Adder","thrpt",32,10,144042687.853677,15460832.036524,"ops/s"
"com.github.chrishantha.microbenchmark.counter.CounterBenchmark.Adder:getAdder","thrpt",32,10,66283691.341041,6606463.727376,"ops/s"
"com.github.chrishantha.microbenchmark.counter.CounterBenchmark.Adder:incAdder","thrpt",32,10,77758996.512636,10009392.136472,"ops/s"
"com.github.chrishantha.microbenchmark.counter.CounterBenchmark.Atomic","thrpt",32,10,120365435.446834,17129318.767896,"ops/s"
"com.github.chrishantha.microbenchmark.counter.CounterBenchmark.Atomic:getAtomic","thrpt",32,10,82107926.211726,17647094.043510,"ops/s"
"com.github.chrishantha.microbenchmark.counter.CounterBenchmark.Atomic:incAtomic","thrpt",32,10,38257509.235108,1652542.922155,"ops/s"
"com.github.chrishantha.microbenchmark.counter.CounterBenchmark.LockFair","thrpt",32,10,331713.975351,7026.817792,"ops/s"
"com.github.chrishantha.microbenchmark.counter.CounterBenchmark.LockFair:getFairLock","thrpt",32,10,165854.165274,3519.694333,"ops/s"
"com.github.chrishantha.microbenchmark.counter.CounterBenchmark.LockFair:incFairLock","thrpt",32,10,165859.810077,3507.232996,"ops/s"
"com.github.chrishantha.microbenchmark.counter.CounterBenchmark.LockNonFair","thrpt",32,10,48356183.025589,393653.219465,"ops/s"
"com.github.chrishantha.microbenchmark.counter.CounterBenchmark.LockNonFair:getNonFairLock","thrpt",32,10,22937944.748080,1590942.778504,"ops/s"
"com.github.chrishantha.microbenchmark.counter.CounterBenchmark.LockNonFair:incNonFairLock","thrpt",32,10,25418238.277509,1445912.907474,"ops/s"
"com.github.chrishantha.microbenchmark.counter.CounterBenchmark.RWLockFair","thrpt",32,10,329387.231250,4548.647036,"ops/s"
"com.github.chrishantha.microbenchmark.counter.CounterBenchmark.RWLockFair:getFairRWLock","thrpt",32,10,164694.647072,2277.131909,"ops/s"
"com.github.chrishantha.microbenchmark.counter.CounterBenchmark.RWLockFair:incFairRWLock","thrpt",32,10,164692.584177,2271.531323,"ops/s"
"com.github.chrishantha.microbenchmark.counter.CounterBenchmark.RWLockNonFair","thrpt",32,10,8201944.114145,745452.256964,"ops/s"
"com.github.chrishantha.microbenchmark.counter.CounterBenchmark.RWLockNonFair:getNonFairRWLock","thrpt",32,10,7587794.858415,177077.802973,"ops/s"
"com.github.chrishantha.microbenchmark.counter.CounterBenchmark.RWLockNonFair:incNonFairRWLock","thrpt",32,10,614149.255730,772111.228685,"ops/s"
"com.github.chrishantha.microbenchmark.counter.CounterBenchmark.SemaphoreFair","thrpt",32,10,335416.328898,6610.721473,"ops/s"
"com.github.chrishantha.microbenchmark.counter.CounterBenchmark.SemaphoreFair:getFairSemaphore","thrpt",32,10,167708.740647,3303.341600,"ops/s"
"com.github.chrishantha.microbenchmark.counter.CounterBenchmark.SemaphoreFair:incFairSemaphore","thrpt",32,10,167707.588251,3307.386475,"ops/s"
"com.github.chrishantha.microbenchmark.counter.CounterBenchmark.SemaphoreNonFair","thrpt",32,10,36485856.988994,1516028.782235,"ops/s"
"com.github.chrishantha.microbenchmark.counter.CounterBenchmark.SemaphoreNonFair:getNonFairSemaphore","thrpt",32,10,18611116.676187,1327812.537449,"ops/s"
"com.github.chrishantha.microbenchmark.counter.CounterBenchmark.SemaphoreNonFair:incNonFairSemaphore","thrpt",32,10,17874740.312807,1598631.609722,"ops/s"
"com.github.chrishantha.microbenchmark.counter.CounterBenchmark.Stamped","thrpt",32,10,50888879.645061,541245.022431,"ops/s"
"com.github.chrishantha.microbenchmark.counter.CounterBenchmark.Stamped:getStamped","thrpt",32,10,28274.818585,2820.250704,"ops/s"
"com.github.chrishantha.microbenchmark.counter.CounterBenchmark.Stamped:incStamped","thrpt",32,10,50860604.826476,542952.356516,"ops/s"
"com.github.chrishantha.microbenchmark.counter.CounterBenchmark.StampedOptimistic","thrpt",32,10,246896665.363924,32922768.007977,"ops/s"
"com.github.chrishantha.microbenchmark.counter.CounterBenchmark.StampedOptimistic:getOptimisticStamped","thrpt",32,10,218815819.811359,36214035.685026,"ops/s"
"com.github.chrishantha.microbenchmark.counter.CounterBenchmark.StampedOptimistic:incOptimisticStamped","thrpt",32,10,28080845.552565,3504035.658131,"ops/s"
"com.github.chrishantha.microbenchmark.counter.CounterBenchmark.Synchronized","thrpt",32,10,30843290.878558,660205.569030,"ops/s"
"com.github.chrishantha.microbenchmark.counter.CounterBenchmark.Synchronized:getSynchronized","thrpt",32,10,12932642.274636,1467733.930891,"ops/s"
"com.github.chrishantha.microbenchmark.counter.CounterBenchmark.Synchronized:incSynchronized","thrpt",32,10,17910648.603922,1716632.725058,"ops/s"
"com.github.chrishantha.microbenchmark.counter.CounterBenchmark.SynchronizedMethod","thrpt",32,10,32043877.027296,1925057.053620,"ops/s"
"com.github.chrishantha.microbenchmark.counter.CounterBenchmark.SynchronizedMethod:getSynchronizedMethod","thrpt",32,10,15292344.777284,1708224.473224,"ops/s"
"com.github.chrishantha.microbenchmark.counter.CounterBenchmark.SynchronizedMethod:incSynchronizedMethod","thrpt",32,10,16751532.250012,1103967.194367,"ops/s"
"com.github.chrishantha.microbenchmark.counter.CounterBenchmark.Volatile","thrpt",32,10,153427206.436470,15192932.606154,"ops/s"
"com.github.chrishantha.microbenchmark.counter.CounterBenchmark.Volatile:getVolatile","thrpt",32,10,110349815.018562,16048737.668003,"ops/s"
"com.github.chrishantha.microbenchmark.counter.CounterBenchmark.Volatile:incVolatile","thrpt",32,10,43077391.417908,1479922.754363,"ops/s"
