"Benchmark","Mode","Threads","Samples","Score","Score Error (99.9%)","Unit"
"com.github.chrishantha.microbenchmark.counter.CounterBenchmark.Adder","thrpt",10,10,143270632.710257,13056059.323882,"ops/s"
"com.github.chrishantha.microbenchmark.counter.CounterBenchmark.Adder:getAdder","thrpt",10,10,62258169.727353,7700943.315396,"ops/s"
"com.github.chrishantha.microbenchmark.counter.CounterBenchmark.Adder:incAdder","thrpt",10,10,81012462.982903,9719637.570830,"ops/s"
"com.github.chrishantha.microbenchmark.counter.CounterBenchmark.Atomic","thrpt",10,10,111539252.115408,15157817.121796,"ops/s"
"com.github.chrishantha.microbenchmark.counter.CounterBenchmark.Atomic:getAtomic","thrpt",10,10,73384408.934674,15365003.463837,"ops/s"
"com.github.chrishantha.microbenchmark.counter.CounterBenchmark.Atomic:incAtomic","thrpt",10,10,38154843.180734,2113192.678881,"ops/s"
"com.github.chrishantha.microbenchmark.counter.CounterBenchmark.LockFair","thrpt",10,10,342699.729481,6673.798090,"ops/s"
"com.github.chrishantha.microbenchmark.counter.CounterBenchmark.LockFair:getFairLock","thrpt",10,10,171350.483213,3337.286678,"ops/s"
"com.github.chrishantha.microbenchmark.counter.CounterBenchmark.LockFair:incFairLock","thrpt",10,10,171349.246268,3336.514882,"ops/s"
"com.github.chrishantha.microbenchmark.counter.CounterBenchmark.LockNonFair","thrpt",10,10,48146783.992424,628428.409872,"ops/s"
"com.github.chrishantha.microbenchmark.counter.CounterBenchmark.LockNonFair:getNonFairLock","thrpt",10,10,24828682.399417,1553663.977544,"ops/s"
"com.github.chrishantha.microbenchmark.counter.CounterBenchmark.LockNonFair:incNonFairLock","thrpt",10,10,23318101.593007,1799197.553412,"ops/s"
"com.github.chrishantha.microbenchmark.counter.CounterBenchmark.RWLockFair","thrpt",10,10,333127.833509,3120.857226,"ops/s"
"com.github.chrishantha.microbenchmark.counter.CounterBenchmark.RWLockFair:getFairRWLock","thrpt",10,10,166561.959681,1560.935966,"ops/s"
"com.github.chrishantha.microbenchmark.counter.CounterBenchmark.RWLockFair:incFairRWLock","thrpt",10,10,166565.873828,1559.926274,"ops/s"
"com.github.chrishantha.microbenchmark.counter.CounterBenchmark.RWLockNonFair","thrpt",10,10,9643250.354536,2300066.939082,"ops/s"
"com.github.chrishantha.microbenchmark.counter.CounterBenchmark.RWLockNonFair:getNonFairRWLock","thrpt",10,10,8007326.734584,342921.612053,"ops/s"
"com.github.chrishantha.microbenchmark.counter.CounterBenchmark.RWLockNonFair:incNonFairRWLock","thrpt",10,10,1635923.619952,2061477.158879,"ops/s"
"com.github.chrishantha.microbenchmark.counter.CounterBenchmark.SemaphoreFair","thrpt",10,10,343462.320893,5831.497473,"ops/s"
"com.github.chrishantha.microbenchmark.counter.CounterBenchmark.SemaphoreFair:getFairSemaphore","thrpt",10,10,171727.901982,2912.669021,"ops/s"
"com.github.chrishantha.microbenchmark.counter.CounterBenchmark.SemaphoreFair:incFairSemaphore","thrpt",10,10,171734.418911,2918.945391,"ops/s"
"com.github.chrishantha.microbenchmark.counter.CounterBenchmark.SemaphoreNonFair","thrpt",10,10,36052959.093842,794119.984209,"ops/s"
"com.github.chrishantha.microbenchmark.counter.CounterBenchmark.SemaphoreNonFair:getNonFairSemaphore","thrpt",10,10,18121774.930251,1255562.054782,"ops/s"
"com.github.chrishantha.microbenchmark.counter.CounterBenchmark.SemaphoreNonFair:incNonFairSemaphore","thrpt",10,10,17931184.163591,1109158.628950,"ops/s"
"com.github.chrishantha.microbenchmark.counter.CounterBenchmark.Stamped","thrpt",10,10,51511507.289608,698606.539009,"ops/s"
"com.github.chrishantha.microbenchmark.counter.CounterBenchmark.Stamped:getStamped","thrpt",10,10,24425.182534,3084.599658,"ops/s"
"com.github.chrishantha.microbenchmark.counter.CounterBenchmark.Stamped:incStamped","thrpt",10,10,51487082.107074,701470.819208,"ops/s"
"com.github.chrishantha.microbenchmark.counter.CounterBenchmark.StampedOptimistic","thrpt",10,10,206553723.284472,10582417.839350,"ops/s"
"com.github.chrishantha.microbenchmark.counter.CounterBenchmark.StampedOptimistic:getOptimisticStamped","thrpt",10,10,174021890.802906,11517563.822508,"ops/s"
"com.github.chrishantha.microbenchmark.counter.CounterBenchmark.StampedOptimistic:incOptimisticStamped","thrpt",10,10,32531832.481566,1110080.405059,"ops/s"
"com.github.chrishantha.microbenchmark.counter.CounterBenchmark.Synchronized","thrpt",10,10,29482285.696039,669746.806738,"ops/s"
"com.github.chrishantha.microbenchmark.counter.CounterBenchmark.Synchronized:getSynchronized","thrpt",10,10,11376765.876793,531010.551651,"ops/s"
"com.github.chrishantha.microbenchmark.counter.CounterBenchmark.Synchronized:incSynchronized","thrpt",10,10,18105519.819246,737055.591532,"ops/s"
"com.github.chrishantha.microbenchmark.counter.CounterBenchmark.SynchronizedMethod","thrpt",10,10,35922531.512297,1539470.383262,"ops/s"
"com.github.chrishantha.microbenchmark.counter.CounterBenchmark.SynchronizedMethod:getSynchronizedMethod","thrpt",10,10,15916885.081487,1319340.503432,"ops/s"
"com.github.chrishantha.microbenchmark.counter.CounterBenchmark.SynchronizedMethod:incSynchronizedMethod","thrpt",10,10,20005646.430810,1877926.494915,"ops/s"
"com.github.chrishantha.microbenchmark.counter.CounterBenchmark.Volatile","thrpt",10,10,138583666.483360,17545370.866791,"ops/s"
"com.github.chrishantha.microbenchmark.counter.CounterBenchmark.Volatile:getVolatile","thrpt",10,10,97510207.477616,18164219.553044,"ops/s"
"com.github.chrishantha.microbenchmark.counter.CounterBenchmark.Volatile:incVolatile","thrpt",10,10,41073459.005745,2149120.951809,"ops/s"
